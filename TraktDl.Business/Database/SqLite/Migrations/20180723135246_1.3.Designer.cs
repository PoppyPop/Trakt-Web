// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TraktDl.Business.Database.SqLite;

namespace TraktDl.Business.Database.SqLite.Migrations
{
    [DbContext(typeof(SqLiteContext))]
    [Migration("20180723135246_1.3")]
    partial class _13
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("TraktDl.Business.Database.SqLite.EpisodeSql", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("AirDate");

                    b.Property<int>("EpisodeNumber");

                    b.Property<string>("Name");

                    b.Property<string>("PosterUrl");

                    b.Property<string>("ProvidersData");

                    b.Property<Guid>("SeasonID");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("SeasonID", "EpisodeNumber")
                        .IsUnique();

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("TraktDl.Business.Database.SqLite.SeasonSql", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Blacklisted");

                    b.Property<int>("SeasonNumber");

                    b.Property<uint>("ShowID");

                    b.HasKey("Id");

                    b.HasIndex("ShowID", "SeasonNumber")
                        .IsUnique();

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("TraktDl.Business.Database.SqLite.ShowSql", b =>
                {
                    b.Property<uint>("Id");

                    b.Property<bool>("Blacklisted");

                    b.Property<string>("Name");

                    b.Property<string>("PosterUrl");

                    b.Property<string>("ProvidersData");

                    b.Property<int?>("Year");

                    b.HasKey("Id");

                    b.ToTable("Shows");
                });

            modelBuilder.Entity("TraktDl.Business.Shared.Database.ApiKeySql", b =>
                {
                    b.Property<string>("Id");

                    b.Property<string>("ApiData")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("ApiKeys");
                });

            modelBuilder.Entity("TraktDl.Business.Database.SqLite.EpisodeSql", b =>
                {
                    b.HasOne("TraktDl.Business.Database.SqLite.SeasonSql", "Season")
                        .WithMany("Episodes")
                        .HasForeignKey("SeasonID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TraktDl.Business.Database.SqLite.SeasonSql", b =>
                {
                    b.HasOne("TraktDl.Business.Database.SqLite.ShowSql", "Show")
                        .WithMany("Seasons")
                        .HasForeignKey("ShowID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
